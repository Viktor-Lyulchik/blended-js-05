(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const l of i.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&r(l)}).observe(document,{childList:!0,subtree:!0});function o(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(t){if(t.ep)return;t.ep=!0;const i=o(t);fetch(t.href,i)}})();const f=document.querySelector(".header-form"),L=document.querySelector(".theme-toggle-button"),d=document.querySelector(".tasks-list"),a=document.querySelector("body");function T(){let e="";return a.classList.contains("theme-light")?e="theme-dark":e="theme-light",a.classList.replace(h(e),e),e}function h(e){return e==="theme-dark"?"theme-light":"theme-dark"}function k(e){a.classList.contains(e)||a.classList.add(e),a.classList.remove(h(e))}function y(e){const s=e.map(({taskName:o,taskDescription:r,id:t})=>`<li class="task-list-item" data-id="${t}">
      <button class="task-list-item-btn">Delete</button>
      <h3>${o}</h3>
      <p>${r}</p>
  </li>`).join("");d.innerHTML=s}function b(e){const{taskName:s,taskDescription:o,id:r}=e,t=`<li class="task-list-item" data-id="${r}">
        <button class="task-list-item-btn">Delete</button>
        <h3>${s}</h3>
        <p>${o}</p>
    </li>`;d.insertAdjacentHTML("beforeend",t)}function u(e,s){localStorage.setItem(e,JSON.stringify(s))}function g(e,s=""){const o=localStorage.getItem(e);let r=s;if(o)try{r=JSON.parse(o)}catch(t){r=s,console.error("Error restoring data from the localStorage:",t)}return r}let n=[];const m="notes_books",p="notes_books_theme";n=g(m,[]);n.length!=0&&y(n);let c=g(p);c===""&&(c="theme-dark");k(c);f.addEventListener("submit",e=>{e.preventDefault();const s=e.currentTarget.elements.taskName.value.trim(),o=e.currentTarget.elements.taskDescription.value.trim();if(!s||!o){alert("Please, fill  all fields of task!");return}const r={taskName:s,taskDescription:o,id:n.length+1};n.push(r),b(r),u(m,n),f.reset()});L.addEventListener("click",()=>{c=T(),u(p,c)});d.addEventListener("click",e=>{if(e.target.nodeName!="BUTTON")return;const s=e.target.closest(".task-list-item"),o=+s.dataset.id;n=n.filter(({id:r})=>r!==o),u(m,n),s.remove()});
//# sourceMappingURL=index.js.map
